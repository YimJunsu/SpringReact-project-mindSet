<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="projectmain.mapper.UserMapper">

    <!-- 결과 매핑 -->
    <resultMap id="UserResultMap" type="projectmain.model.User">
        <id property="userId" column="user_id" />
        <result property="email" column="email" />
        <result property="password" column="password" />
        <result property="nickname" column="nickname" />
        <result property="gender" column="gender" />
        <result property="phone" column="phone" />
        <result property="address" column="address" />
        <result property="addressDetail" column="address_detail" />
        <result property="postCode" column="post_code" />
        <result property="profileImage" column="profile_image" />
        <result property="role" column="role" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
    </resultMap>

    <!-- 새 사용자 등록 -->
    <insert id="insert" parameterType="projectmain.model.User" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO users (
        email,
        password,
        nickname,
        gender,
        phone,
        address,
        address_detail,
        post_code,
        profile_image,
        role
        ) VALUES (
        #{email},
        #{password},
        #{nickname},
        #{gender},
        #{phone},
        #{address},
        #{addressDetail},
        #{postCode},
        #{profileImage},
        #{role}
        )
    </insert>

    <!-- 이메일로 사용자 조회 -->
    <select id="findByEmail" parameterType="String" resultMap="UserResultMap">
        SELECT * FROM users WHERE email = #{email}
    </select>

    <!-- 닉네임으로 사용자 조회 -->
    <select id="findByNickname" parameterType="String" resultMap="UserResultMap">
        SELECT * FROM users WHERE nickname = #{nickname}
    </select>

    <!-- ID로 사용자 조회 -->
    <select id="findById" parameterType="Long" resultMap="UserResultMap">
        SELECT * FROM users WHERE user_id = #{userId}
    </select>

    <!-- 이메일 존재 여부 확인 -->
    <select id="existsByEmail" parameterType="String" resultType="boolean">
        SELECT COUNT(*) > 0 FROM users WHERE email = #{email}
    </select>

    <!-- 닉네임 존재 여부 확인 -->
    <select id="existsByNickname" parameterType="String" resultType="boolean">
        SELECT COUNT(*) > 0 FROM users WHERE nickname = #{nickname}
    </select>

    <!-- 사용자 정보 업데이트 -->
    <update id="update" parameterType="projectmain.model.User">
        UPDATE users SET
        email = #{email},
        <if test="password != null">password = #{password},</if>
        nickname = #{nickname},
        gender = #{gender},
        phone = #{phone},
        address = #{address},
        address_detail = #{addressDetail},
        post_code = #{postCode},
        profile_image = #{profileImage},
        role = #{role},
        updated_at = CURRENT_TIMESTAMP
        WHERE user_id = #{userId}
    </update>

    <!-- 사용자 삭제 -->
    <delete id="delete" parameterType="Long">
        DELETE FROM users WHERE user_id = #{userId}
    </delete>
</mapper>